# Crontab jobs used by the MARSfarm V1
# Author: Howard Webb
# Date: 11/13/2017
#
#Modified by: Jackie Zhong(zy99120@gmail.com)
#Modified by: Tyler Richards(richardstylerj20@gmail.com)
#Modified by: Peter Webb(peter@marsfarm.com) - 07.28.22 & 11.01.22
#Modified by: Howard Webb(webb.howard.m@gmail.com) - 11.10.22
#Modified by: Peter Webb - 11.14.22
#Modified by: Peter Webb - 02.21.23
#Modified by: Peter Webb - 04.05.23

# Don't send email
MAILTO=""

PYTHON_PATH=/home/pi/Desktop/MV1_firmware/python
SCRIPT_PATH=/home/pi/Desktop/MV1_firmware/scripts
LOG_PATH=/home/pi/Desktop/MV1_firmware/logs
 
# m h  dom mon dow   command      
# 2>&1 send standard output to errors  
# use > to add to top of file >> to add to bottom of file

# Capture camera using white lights, every hour, five minutes after the hour
5 * * * * python3 $PYTHON_PATH/CameraAF.py >> $LOG_PATH/Webcam.log 2>&1 &

# Upload most recent image to amazon S3, every hour, ten minutes after the hour
10 * * * * python3 $PYTHON_PATH/Remote_S3Util.py >> $LOG_PATH/S3.log 2>&1 &

# Capture temperature, humidity, and Co2 sensor data, send it to MongoDB and Google Sheets, every hour, 2 minutes after the hour
8 * * * * python3 $PYTHON_PATH/LogSensors.py >> $LOG_PATH/LogSensor.log 2>&1 &

# Check trial settings, to determine LED channel values, every minute
* * * * * python3 $PYTHON_PATH/Light_Control.py >> $LOG_PATH/Light.log 2>&1 &

# Check trial settings and pump status, to determine pump status, every minute
* * * * * python3 $PYTHON_PATH/Pump_Control.py >> $LOG_PATH/Pump.log 2>&1 &

# Check trial settings and temperature values, to determine whether heater or exhaust fan turns on, every 10 seconds
* * * * * for i in {1..5}; do python3 $PYTHON_PATH/Thermostat.py & sleep 10; done >> $LOG_PATH/Thermostat.log 2>&1 &

# Refresh the websocket service every 4 hours on the 1st minute
1 */4 * * * sudo systemctl restart websocket_comms.service

# Refresh the broker service every 4 hours on the 2nd minute
2 */4 * * * sudo systemctl restart broker.service

# Start pigpio service, at reboot, the "-s1" is necessary to set sample rate faster for Heater.py to set frequency 
@reboot sudo pigpiod -s1 >> $LOG_PATH/boot_pigpio.log 2>&1 &

# Set up MAC address to remain static, 30 seconds after reboot
@reboot sleep 40; python3 $PYTHON_PATH/Ethernet.py >> $LOG_PATH/boot_ethernet.log 2>&1 &

# Check for network connection, and if not found, restarts NetworkManager
*/5 * * * * sudo bash $SCRIPT_PATH/network_check.sh >> $LOG_PATH/network_check.log 2>&1 &

# Reboot the device at 2:30AM every day, with a random delay of up to 5 minutes to avoid all devices rebooting at the same time
30 2 * * * /bin/bash -c 'sleep $((RANDOM % 300)); sudo reboot'

# After ethernet setup has had chance to run, the wifi service will be created at 40 seconds after reboot 
#@reboot sleep 40; sudo bash $SCRIPT_PATH/wifi.sh >> $LOG_PATH/boot_wifi.log 2>&1 &

# Start paho service to listen for device_id on MQTT server, 1 minute after reboot - script continues to loop after starting at boot
#@reboot sleep 60; python3 $PYTHON_PATH/MQTTsub_savetrial.py >> $LOG_PATH/boot_MQTT.log 2>&1 &
# WARNING: This should probably be changed and tested to only run for an hour after boot so as to prevent long-term wear
